-- STEP 4: DROP full_name COLUMN
-- Date: Generated by migration script
-- Purpose: Remove the full_name column after consolidating with name field

-- WARNING: This script will permanently remove the full_name column.
-- Ensure you have:
-- 1. Run merge_full_name_to_name.sql to merge data
-- 2. Updated all application code to use 'name' instead of 'full_name'
-- 3. Tested the application thoroughly
-- 4. Created a backup of your data

-- Drop full_name column from all tables
-- Run this AFTER verifying the merge_full_name_to_name migration was successful

-- Step 1: Drop any views that might reference full_name column
DO $$
DECLARE
    view_record RECORD;
BEGIN
    -- Find and drop views that reference full_name
    FOR view_record IN 
        SELECT DISTINCT 
            v.table_schema,
            v.table_name as view_name
        FROM information_schema.views v
        JOIN information_schema.view_column_usage vcu 
            ON v.table_schema = vcu.view_schema 
            AND v.table_name = vcu.view_name
        WHERE vcu.column_name = 'full_name'
        AND v.table_schema = 'public'
    LOOP
        EXECUTE format('DROP VIEW IF EXISTS %I.%I CASCADE', view_record.table_schema, view_record.view_name);
        RAISE NOTICE 'Dropped view %.%', view_record.table_schema, view_record.view_name;
    END LOOP;
END $$;

-- Step 2: Drop full_name column from organizations table
DO $$
BEGIN
    IF EXISTS (
        SELECT 1 
        FROM information_schema.columns 
        WHERE table_name = 'organizations' 
        AND column_name = 'full_name'
        AND table_schema = 'public'
    ) THEN
        ALTER TABLE organizations DROP COLUMN IF EXISTS full_name;
        RAISE NOTICE 'Dropped full_name column from organizations table';
    ELSE
        RAISE NOTICE 'No full_name column found in organizations table';
    END IF;
END $$;

-- Step 3: Drop full_name column from profiles table if it exists
DO $$
BEGIN
    IF EXISTS (
        SELECT 1 
        FROM information_schema.columns 
        WHERE table_name = 'profiles' 
        AND column_name = 'full_name'
        AND table_schema = 'public'
    ) THEN
        ALTER TABLE profiles DROP COLUMN IF EXISTS full_name;
        RAISE NOTICE 'Dropped full_name column from profiles table';
    ELSE
        RAISE NOTICE 'No full_name column found in profiles table';
    END IF;
END $$;

-- Step 4: Drop full_name column from rolodex_persons table if it exists
DO $$
BEGIN
    IF EXISTS (
        SELECT 1 
        FROM information_schema.columns 
        WHERE table_name = 'rolodex_persons' 
        AND column_name = 'full_name'
        AND table_schema = 'public'
    ) THEN
        ALTER TABLE rolodex_persons DROP COLUMN IF EXISTS full_name;
        RAISE NOTICE 'Dropped full_name column from rolodex_persons table';
    ELSE
        RAISE NOTICE 'No full_name column found in rolodex_persons table';
    END IF;
END $$;

-- Step 5: Verify the columns are gone
SELECT 
    table_name,
    column_name
FROM information_schema.columns
WHERE column_name = 'full_name'
AND table_schema = 'public'
ORDER BY table_name;

-- If the above query returns no rows, the migration is complete!
-- If it returns rows, those tables still have the full_name column 
-- Simple Migration: Merge full_name into name field
-- Date: Generated by migration script
-- Purpose: Consolidate full_name and name fields into a single name field

-- Step 1: Show current state
SELECT 
    'Before Migration' as status,
    COUNT(*) as total_organizations,
    COUNT(CASE WHEN name IS NULL OR name = '' THEN 1 END) as empty_names,
    COUNT(CASE WHEN full_name IS NOT NULL AND full_name != '' THEN 1 END) as has_full_name
FROM organizations;

-- Step 2: Backup current data (optional but recommended)
DO $$
BEGIN
    -- Only create backup if it doesn't exist
    IF NOT EXISTS (SELECT 1 FROM information_schema.tables WHERE table_name = 'organizations_backup_fullname') THEN
        CREATE TABLE organizations_backup_fullname AS SELECT * FROM organizations;
        RAISE NOTICE 'Backup table created: organizations_backup_fullname';
    ELSE
        RAISE NOTICE 'Backup table already exists, skipping...';
    END IF;
END $$;

-- Step 3: Update organizations - merge full_name into name where name is empty
UPDATE organizations
SET name = COALESCE(
    NULLIF(TRIM(name), ''),
    NULLIF(TRIM(full_name), ''),
    'Unknown Organization'
)
WHERE name IS NULL OR name = '';

-- Step 4: Update any profiles table if it exists
DO $$ 
BEGIN
    IF EXISTS (
        SELECT 1 
        FROM information_schema.columns 
        WHERE table_name = 'profiles' 
        AND column_name = 'full_name'
        AND table_schema = 'public'
    ) THEN
        UPDATE profiles
        SET name = COALESCE(
            NULLIF(TRIM(name), ''),
            NULLIF(TRIM(full_name), ''),
            'Unknown User'
        )
        WHERE name IS NULL OR name = '';
        RAISE NOTICE 'Updated profiles table';
    END IF;
END $$;

-- Step 5: Update any rolodex_persons table if it exists
DO $$ 
BEGIN
    IF EXISTS (
        SELECT 1 
        FROM information_schema.columns 
        WHERE table_name = 'rolodex_persons' 
        AND column_name = 'full_name'
        AND table_schema = 'public'
    ) THEN
        UPDATE rolodex_persons
        SET name = COALESCE(
            NULLIF(TRIM(name), ''),
            NULLIF(TRIM(full_name), ''),
            'Unknown Person'
        )
        WHERE name IS NULL OR name = '';
        RAISE NOTICE 'Updated rolodex_persons table';
    END IF;
END $$;

-- Step 6: Show results
SELECT 
    'After Migration' as status,
    COUNT(*) as total_organizations,
    COUNT(CASE WHEN name IS NULL OR name = '' THEN 1 END) as empty_names,
    COUNT(CASE WHEN full_name IS NOT NULL AND full_name != '' THEN 1 END) as still_has_full_name
FROM organizations;

-- Step 7: Show sample of migrated data
SELECT 
    id,
    name,
    CASE 
        WHEN full_name IS NOT NULL THEN full_name
        ELSE 'N/A'
    END as full_name_value,
    CASE 
        WHEN name = full_name THEN 'Same'
        WHEN name IS NOT NULL AND full_name IS NULL THEN 'Name Only'
        WHEN name IS NOT NULL AND full_name IS NOT NULL THEN 'Different'
        ELSE 'Check'
    END as status
FROM organizations
LIMIT 10;

-- Note: After verifying the migration, run the drop_full_name_column.sql script 
# Generated by Django 5.2.1 on 2025-05-29 16:00

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('projects', '0007_add_iati_identifier_to_organization'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('admin_level', models.CharField(choices=[('country', 'Country'), ('region', 'Region/State/Province'), ('district', 'District/County'), ('municipality', 'Municipality/City'), ('village', 'Village/Ward')], max_length=20)),
                ('code', models.CharField(blank=True, help_text='Official administrative code', max_length=50)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('boundary_geojson', models.JSONField(blank=True, help_text='GeoJSON boundary data', null=True)),
                ('population', models.PositiveIntegerField(blank=True, null=True)),
                ('area_km2', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_units', to='projects.country')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='projects.adminunit')),
            ],
            options={
                'ordering': ['country', 'admin_level', 'name'],
                'unique_together': {('name', 'admin_level', 'country')},
            },
        ),
        migrations.CreateModel(
            name='ProjectLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_type', models.CharField(choices=[('management', 'Management Location'), ('implementation', 'Implementation Site'), ('impact', 'Impact Area')], max_length=20)),
                ('name', models.CharField(blank=True, help_text='Location name or description', max_length=200)),
                ('notes', models.TextField(blank=True, help_text='Additional notes about this location')),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('boundary_geojson', models.JSONField(blank=True, help_text='GeoJSON boundary data for impact areas', null=True)),
                ('managed_by', models.CharField(blank=True, choices=[('donor_hq', 'Donor HQ'), ('un_regional', 'UN Regional Office'), ('govt_ministry', 'Government Ministry'), ('implementing_partner', 'Implementing Partner'), ('other', 'Other')], max_length=20)),
                ('organization_name', models.CharField(blank=True, max_length=200)),
                ('organization_address', models.TextField(blank=True)),
                ('has_physical_site', models.BooleanField(default=True)),
                ('site_type', models.CharField(blank=True, choices=[('office', 'Office'), ('field_site', 'Field Site'), ('health_centre', 'Health Centre'), ('school', 'School'), ('community_center', 'Community Center'), ('virtual', 'Virtual'), ('other', 'Other')], max_length=20)),
                ('impact_scope', models.CharField(blank=True, choices=[('nationwide', 'Nationwide'), ('multi_region', 'Multi-region'), ('state_province', 'State/Province'), ('district', 'District'), ('municipality', 'Municipality'), ('village', 'Village'), ('other', 'Other')], max_length=20)),
                ('estimated_population', models.PositiveIntegerField(blank=True, help_text='Estimated population affected', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin_units', models.ManyToManyField(blank=True, related_name='project_locations', to='projects.adminunit')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='projects.aidproject')),
            ],
            options={
                'ordering': ['location_type', 'name'],
            },
        ),
    ]
